{"version":3,"sources":["team/team-app.jsx"],"names":[],"mappings":"AAAA,CAAC,UAAU;AACX,IAAI,IAAI,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,CAAC;;AAE/D,IAAI,IAAI,WAAW,GAAG,MAAM,CAAC;;IAEzB,4CAA4C,uBAAA;QACxC,eAAe,EAAE,WAAW;YACxB,OAAO;gBACH,IAAI,EAAE,IAAI;aACb,CAAC;AACd,SAAS;;AAET,QAAQ,kBAAkB,EAAE,WAAW;;YAE3B,GAAG,CAAC,SAAS,EAAE;gBACX,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC3D,aAAa;;YAED,GAAG,CAAC,WAAW,EAAE;gBACb,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;gBAC/C,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACxD,aAAa;;YAED,GAAG,CAAC,SAAS,EAAE;gBACX,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC3D,aAAa;;YAED,GAAG,CAAC,WAAW,EAAE;gBACb,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;AAC/D,aAAa;;YAED,GAAG,CAAC,MAAM,EAAE;gBACR,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBACpC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,uBAAuB,EAAE,SAAS,QAAQ,EAAE;AAC9E,oBAAoB,IAAI,IAAI,GAAG,QAAQ,IAAI,WAAW,CAAC;AACvD;;AAEA,oBAAoB,YAAY,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;AACrD;;oBAEoB,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;iBACpC,CAAC,CAAC;aACN;AACb,SAAS;;QAED,iBAAiB,EAAE,WAAW;YAC1B,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC9C,SAAS,CAAC,0BAA0B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACjE,SAAS;;QAED,oBAAoB,EAAE,WAAW;YAC7B,SAAS,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACjD,SAAS,CAAC,6BAA6B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACpE,SAAS;;QAED,SAAS,EAAE,WAAW;AAC9B,YAAY,IAAI,IAAI,GAAG,SAAS,CAAC,kBAAkB,EAAE,CAAC;;YAE1C,GAAG,CAAC,IAAI;YACR;gBACI,UAAU,CAAC,UAAU;oBACjB,WAAW,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;iBAC3C,CAAC,CAAC;aACN;iBACI,GAAG,IAAI,CAAC,SAAS,EAAE;YACxB;gBACI,IAAI,CAAC,QAAQ,CAAC;oBACV,IAAI,EAAE,IAAI;iBACb,CAAC,CAAC;aACN;AACb,SAAS;;QAED,MAAM,EAAE,WAAW;YACf;gBACI,oBAAA,KAAI,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,wBAAyB,CAAA,EAAA;AACxD,oBAAoB,oBAAC,uBAAuB,EAAA,IAAA,CAAG,CAAA,EAAA;;oBAE3B,oBAAA,KAAI,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,MAAO,CAAA,EAAA;wBACjB,IAAI,CAAC,KAAK,CAAC,IAAK;AACzC,oBAA0B,CAAA,EAAA;;oBAEN,oBAAC,qCAAqC,EAAA,IAAA,CAAG,CAAA;gBACvC,CAAA;cACR;SACL;KACJ,CAAC,CAAC;CACN,GAAG","file":"team/team-app.js","sourcesContent":["(function(){\n    var Router, UserStore, UserActions, PageStore, PageActions;\n\n    var defaultPage = 'home';\n\n    MiitComponents.TeamApp = React.createClass({\n        getInitialState: function() {\n            return {\n                page: null\n            };\n        },\n\n        componentWillMount: function() {\n            // Get the user actions\n            if(!UserStore) {\n                UserStore = MiitApp.get('miit-user-store');\n            }\n            // Get the user actions\n            if(!UserActions) {\n                UserActions = MiitApp.get('miit-user-actions');\n                UserActions.check(UserStore.getToken());\n            }\n            // Get the page store\n            if(!PageStore) {\n                PageStore = MiitApp.get('miit-page-store');\n            }\n            // Get the page actions\n            if(!PageActions) {\n                PageActions = MiitApp.get('miit-page-actions');\n            }\n            // Get the router and handle page change\n            if(!Router) {\n                Router = MiitApp.get('miit-router');\n                Router.routes.set('/([a-zA-Z0-9_\\-]{0,})', function(mainPage) {\n                    var page = mainPage || defaultPage;\n\n                    // Set the current active page of the menu\n                    ActiveGroups['menu-team'] = page;\n\n                    // Set the current active page          \n                    PageActions.changeMainPage(page);\n                });\n            }\n        },\n\n        componentDidMount: function() {\n            UserStore.addLoggedInListener(this._onChange);\n            PageStore.addMainPageChangedListener(this._onChange);\n        },\n\n        componentWillUnmount: function() {\n            UserStore.removeLoggedInListener(this._onChange);\n            PageStore.removeMainPageChangedListener(this._onChange);\n        },\n\n        _onChange: function() {\n            var page = PageStore.getCurrentMainPage();\n\n            if(!page)\n            {\n                setTimeout(function(){\n                    PageActions.changeMainPage('not-found');\n                });\n            }\n            else if(this.isMounted())\n            {\n                this.setState({\n                    page: page\n                });\n            }\n        },\n\n        render: function() {\n            return (\n                <div className=\"page bg-grey lighten-5\">\n                    <MiitComponents.MenuTeam />\n\n                    <div className=\"main\">\n                        {this.state.page}\n                    </div>\n\n                    <MiitComponents.NotificationsContainer />\n                </div>\n            );\n        }\n    });\n})();"],"sourceRoot":"/source/"}