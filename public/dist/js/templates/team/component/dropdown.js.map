{"version":3,"sources":["team/component/dropdown.jsx"],"names":[],"mappings":"AAAA,IAAI,8BAA8B,wBAAA;AAClC,IAAI,SAAS,EAAE,IAAI;;IAEf,SAAS,EAAE;QACP,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;AAChD,KAAK;;IAED,eAAe,EAAE,WAAW;QACxB,OAAO;YACH,KAAK,EAAE,MAAM;SAChB,CAAC;AACV,KAAK;;IAED,eAAe,EAAE,YAAY;QACzB,OAAO;YACH,IAAI,EAAE,KAAK;SACd,CAAC;AACV,KAAK;;IAED,WAAW,EAAE,WAAW;QACpB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC7B,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;YAChB,OAAO,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,EAAE,IAAI,CAAC;SAC1C;QACD,OAAO,KAAK,CAAC;AACrB,KAAK;;IAED,QAAQ,EAAE,WAAW;QACjB,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC;gBACV,IAAI,EAAE,KAAK;aACd,CAAC,CAAC;SACN;AACT,KAAK;;IAED,OAAO,EAAE,WAAW;QAChB,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;AACxD,KAAK;;IAED,OAAO,EAAE,WAAW;QAChB,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACrC,KAAK;;IAED,OAAO,EAAE,WAAW;QAChB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,QAAQ,CAAC;YACV,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI;SACzB,CAAC,CAAC;AACX,KAAK;;IAED,MAAM,EAAE,WAAW;QACf,IAAI,IAAI,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AACpD,QAAQ,IAAI,IAAI,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;;QAErC,IAAI,MAAM,OAAO,UAAU,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC9D,QAAQ,IAAI,UAAU,GAAG,UAAU,CAAC,gBAAgB,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;;QAEhE;YACI,oBAAA,MAAK,EAAA,CAAA,CAAC,YAAA,EAAY,CAAE,IAAI,CAAC,OAAO,EAAC,CAAC,YAAA,EAAY,CAAE,IAAI,CAAC,OAAO,EAAC,CAAC,OAAA,EAAO,CAAE,IAAI,CAAC,OAAO,EAAC,CAAC,SAAA,EAAS,CAAE,UAAY,CAAA,EAAA;gBACxG,oBAAA,MAAK,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,gBAAiB,CAAA,EAAA;oBAC5B,IAAI,CAAC,KAAK,CAAC,KAAK,EAAC;oBAClB,oBAAA,GAAE,EAAA,CAAA,CAAC,SAAA,EAAS,CAAE,MAAQ,CAAI,CAAA;AAC9C,gBAAuB,CAAA,EAAA;;gBAEP,oBAAC,EAAE,EAAA,CAAA,CAAC,IAAA,EAAI,CAAE,IAAI,CAAC,KAAK,CAAC,IAAM,CAAA,EAAA;oBACvB,oBAAA,KAAI,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,gBAAiB,CAAA,EAAA;wBAC3B,IAAI,CAAC,KAAK,CAAC,QAAS;oBACnB,CAAA;gBACL,CAAA;YACF,CAAA;UACT;KACL;CACJ,CAAC","file":"team/component/dropdown.js","sourcesContent":["var Dropdown = React.createClass({\n    timeoutId: null,\n\n    propTypes: {\n        label: React.PropTypes.string.isRequired\n    },\n\n    getDefaultProps: function() {\n        return {\n            angle: 'down'\n        };\n    },\n\n    getInitialState: function () {\n        return {\n            open: false\n        };\n    },\n\n    toggleAngle: function() {\n        var angle = this.props.angle;\n        if(this.state.open) {\n            return (angle === 'up') ? 'down': 'up';\n        }\n        return angle;\n    },\n\n    _onLeave: function() {\n        if(this.isMounted()) {\n            this.setState({\n                open: false\n            });\n        }\n    },\n\n    onLeave: function() {\n        this.timeoutId = setTimeout(this._onLeave, 675);\n    },\n\n    onEnter: function() {\n        clearTimeout(this.timeoutId);\n    },\n\n    onClick: function() {\n        this.onEnter();\n        this.setState({\n            open: !this.state.open\n        });\n    },\n\n    render: function() {\n        var icon = 'fa-angle-' + this.toggleAngle();\n        var open = { open: this.state.open };\n\n        var clIcon     = classNames('pull-right', 'fa', icon);\n        var clDropdown = classNames('miit-component', 'dropdown', open);\n\n        return (\n            <span onMouseLeave={this.onLeave} onMouseEnter={this.onEnter} onClick={this.onClick} className={clDropdown}>\n                <span className=\"dropdown-label\">\n                    {this.props.label}\n                    <i className={clIcon}></i>\n                </span>\n                \n                <If test={this.state.open}>\n                    <div className=\"dropdown-inner\">\n                        {this.props.children}\n                    </div>\n                </If>\n            </span>\n        );\n    }\n});"],"sourceRoot":"/source/"}