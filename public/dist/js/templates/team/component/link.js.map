{"version":3,"sources":["team/component/link.jsx"],"names":[],"mappings":"AAAA,IAAI,YAAY,GAAG,EAAE,CAAC;;AAEtB,IAAI,0BAA0B,oBAAA;IAC1B,OAAO,EAAE,SAAS,CAAC,EAAE;QACjB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACtC,SAAS;;AAET,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;;AAEjC,YAAY,CAAC,CAAC,cAAc,EAAE,CAAC;AAC/B;;YAEY,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC;AAC/C,YAAY,MAAM,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAChE;;AAEA,YAAY,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;YAE7C,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;AACT,KAAK;;IAED,SAAS,EAAE,WAAW;AAC1B,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;;YAEhD,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;SAChE;AACT,KAAK;;IAED,MAAM,EAAE,WAAW;AACvB,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;;AAE7C,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;;YAEhD,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;AACrD,YAAY,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;AACnD;;YAEY,GAAG,YAAY,CAAC,WAAW,CAAC,KAAK,UAAU,EAAE;gBACzC,SAAS,GAAG,UAAU,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;aAC/C;AACb,SAAS;;QAED;YACI,oBAAA,GAAE,EAAA,gBAAA,GAAA,CAAE,GAAG,IAAI,CAAC,KAAK,EAAC,CAAC,CAAA,OAAA,EAAO,CAAE,IAAI,CAAC,OAAO,EAAC,CAAC,SAAA,EAAS,CAAE,SAAW,CAAA,CAAA,EAAA;gBAC3D,IAAI,CAAC,KAAK,CAAC,QAAS;YACrB,CAAA;UACN;KACL;CACJ,CAAC","file":"team/component/link.js","sourcesContent":["var ActiveGroups = {};\n\nvar Link = React.createClass({\n    onClick: function(e) {\n        if(this.props.onLinkClick) {\n            this.props.onLinkClick(e);\n        }\n\n        if(!this.props.external) {\n            // If there is an hystory\n            e.preventDefault();\n\n            // Extract the target\n            var target = this.props.href || '';\n            target     = target.substr(target.indexOf('#') + 1);\n            \n            // Set the route in the router\n            injector.get('miit-router').setRoute(target);\n\n            this.setActive();\n        }\n    },\n\n    setActive: function() {\n        if(this.props.activeGroup && this.props.activeName) {\n            // Create if not exist\n            ActiveGroups[this.props.activeGroup] = this.props.activeName;\n        }\n    },\n\n    render: function() {\n        var className = this.props.className;\n\n        if(this.props.activeGroup && this.props.activeName) {\n            // Get the active group\n            var activeGroup = this.props.activeGroup;\n            var activeName = this.props.activeName;\n\n            // Create if not exist\n            if(ActiveGroups[activeGroup] === activeName) {\n                className = classNames(className, 'active');\n            }\n        }\n\n        return (\n            <a {...this.props} onClick={this.onClick} className={className}>\n                {this.props.children}\n            </a>\n        );\n    }\n});"],"sourceRoot":"/source/"}