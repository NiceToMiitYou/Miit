{"version":3,"sources":["team/component/user/user-list-invite.jsx"],"names":[],"mappings":"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","file":"team/component/user/user-list-invite.js","sourcesContent":["(function(){\n    var Utils, UserStore, TeamStore, TeamActions;\n\n    MiitComponents.UserListInvite = React.createClass({\n        getDefaultProps: function() {\n            return {\n                placeholder: {\n                    email: 'Addresse mail'\n                },\n                submit: 'Inviter l\\'utilisateur'\n            };\n        },\n\n        getInitialState: function() {\n            var initial = this.getDefaultErrors();\n\n            initial.email = '';\n\n            return initial;\n        },\n\n        getDefaultErrors: function() {\n            return {\n                missing_email: false,\n                invalid_email: false\n            };\n        },\n\n        componentWillMount: function() {\n            if(!Utils) {\n                Utils = MiitApp.get('miit-utils');\n            }\n            if(!UserStore) {\n                UserStore = MiitApp.get('miit-user-store');\n            }\n            if(!TeamStore) {\n                TeamStore = MiitApp.get('miit-team-store');\n            }\n            if(!TeamActions) {\n                TeamActions = MiitApp.get('miit-team-actions');\n            }\n        },\n\n        componentDidMount: function() {\n            TeamStore.addInvitedListener(this._onInvited);\n            TeamStore.addNotInvitedListener(this._onError);\n        },\n\n        componentWillUnmount: function() {\n            TeamStore.removeInvitedListener(this._onInvited);\n            TeamStore.removeNotInvitedListener(this._onError);\n        },\n\n        handleChange: function(newValue) {\n            this.setState({\n                email: newValue.trim()\n            });\n        },\n\n        handleSubmit: function(e) {\n            e.preventDefault();\n\n            var email = this.state.email;\n            \n            this.setState(this.getDefaultErrors());\n\n            // Check if this is an admin\n            if(!UserStore.isAdmin()){\n                return;\n            }\n\n            // Check if there is data\n            if (!email) {\n                this.setState({\n                    missing_email: true\n                });\n                return;\n            }\n\n            // Check if this is a correct format\n            if(!Utils.validator.email(email)) {\n                this.setState({\n                    invalid_email: true\n                });\n                return;\n            }\n\n            TeamActions.invite(email);\n\n            return;\n        },\n\n        _onInvited: function() {\n            this.setState({\n                email: ''\n            });\n\n            if(typeof this.props.onInvite === 'function') {\n                this.props.onInvite(email);\n            }\n        },\n\n        _onError: function() {\n            console.log('Can not invite the user.');\n        },\n\n        render: function() {\n            // Check if this is an admin\n            if(!UserStore.isAdmin()){\n                return null;\n            }\n\n            var classes_invalid = classNames({\n                'invalid': this.state.missing_email ||\n                           this.state.invalid_email\n            });\n\n            var valueLinkEmail  = {\n                value:         this.state.email,\n                requestChange: this.handleChange\n            };\n\n            return (\n                <div className=\"miit-component user-list-invite mt20\">\n                    <form onSubmit={this.handleSubmit}>\n\n                        <div className=\"input-field left-icon col-md-7 mb10\">\n                            <i className=\"fa fa-user-plus\"></i>\n                            <input type=\"text\" className={classes_invalid} placeholder={this.props.placeholder.email} valueLink={valueLinkEmail} />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn btn-info btn-large ml15\">{this.props.submit}</button>\n                    </form>\n                </div>\n            );\n        }\n    });\n})();"],"sourceRoot":"/source/"}