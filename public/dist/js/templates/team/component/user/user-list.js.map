{"version":3,"sources":["team/component/user/user-list.jsx"],"names":[],"mappings":"AAAA,CAAC,UAAU;AACX,IAAI,IAAI,SAAS,EAAE,WAAW,EAAE,eAAe,EAAE,iBAAiB,CAAC;;IAE/D,6CAA6C,wBAAA;QACzC,eAAe,EAAE,WAAW;YACxB,OAAO;gBACH,KAAK,KAAK,EAAE;gBACZ,OAAO,GAAG,eAAe;gBACzB,OAAO,GAAG,IAAI;gBACd,MAAM,IAAI,IAAI;gBACd,KAAK,KAAK,IAAI;gBACd,MAAM,IAAI,IAAI;gBACd,QAAQ,EAAE,IAAI;gBACd,MAAM,IAAI,KAAK;aAClB,CAAC;AACd,SAAS;;QAED,eAAe,EAAE,WAAW;YACxB,OAAO;gBACH,KAAK,GAAG,EAAE;gBACV,MAAM,EAAE,KAAK;aAChB,CAAC;AACd,SAAS;;QAED,kBAAkB,EAAE,WAAW;YAC3B,GAAG,CAAC,SAAS,EAAE;gBACX,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;aAC9C;YACD,GAAG,CAAC,WAAW,EAAE;gBACb,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;aAClD;YACD,GAAG,CAAC,eAAe,EAAE;gBACjB,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;aAC3D;YACD,GAAG,CAAC,iBAAiB,EAAE;gBACnB,iBAAiB,GAAG,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;aAC/D;YACD,IAAI,CAAC,QAAQ,CAAC;gBACV,KAAK,EAAE,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aACjD,CAAC,CAAC;AACf,SAAS;;AAET,QAAQ,iBAAiB,EAAE,WAAW;;AAEtC,YAAY,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAExD,YAAY,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAEzD,YAAY,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAExD,YAAY,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAExD,YAAY,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;YAE9C,WAAW,CAAC,OAAO,EAAE,CAAC;AAClC,SAAS;;AAET,QAAQ,oBAAoB,EAAE,WAAW;;AAEzC,YAAY,SAAS,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAE3D,YAAY,SAAS,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAE5D,YAAY,SAAS,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAE3D,YAAY,SAAS,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;YAE/C,SAAS,CAAC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7D,SAAS;;QAED,QAAQ,EAAE,WAAW;YACjB,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC;oBACV,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;oBAC9D,MAAM,EAAE,IAAI;iBACf,CAAC,CAAC;aACN;AACb,SAAS;;QAED,MAAM,EAAE,WAAW;YACf;gBACI,oBAAA,KAAI,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,0BAA2B,CAAA,EAAA;oBACtC,oBAAC,EAAE,EAAA,CAAA,CAAC,IAAA,EAAI,CAAE,IAAI,CAAC,KAAK,CAAC,OAAS,CAAA,EAAA;wBAC1B,oBAAC,6BAA6B,EAAA,CAAA,CAAC,KAAA,EAAK,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC,CAAC,KAAA,EAAK,CAAE,IAAI,CAAC,KAAK,CAAC,KAAM,CAAA,CAAG,CAAA;oBACnF,CAAA,EAAA;oBACJ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,IAAI,EAAE;wBACjC,OAAO,oBAAC,2BAA2B,EAAA,CAAA,CAAC,GAAA,EAAG,CAAE,IAAI,CAAC,EAAE,EAAC,CAAC,IAAA,EAAI,CAAE,IAAI,EAAC,CAAC,KAAA,EAAK,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC,CAAC,KAAA,EAAK,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAC,CAAC,MAAA,EAAM,CAAE,IAAI,CAAC,KAAK,CAAC,MAAO,CAAA,CAAG,CAAA,CAAC;qBAClJ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAC;oBACd,oBAAC,EAAE,EAAA,CAAA,CAAC,IAAA,EAAI,CAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAQ,CAAA,EAAA;wBAC1B,oBAAC,sBAAsB,EAAA,IAAA,CAAG,CAAA;oBACzB,CAAA,EAAA;oBACL,oBAAC,EAAE,EAAA,CAAA,CAAC,IAAA,EAAI,CAAE,IAAI,CAAC,KAAK,CAAC,MAAQ,CAAA,EAAA;wBACzB,oBAAC,6BAA6B,EAAA,CAAA,CAAC,QAAA,EAAQ,CAAE,IAAI,CAAC,YAAa,CAAA,CAAG,CAAA;oBAC7D,CAAA;gBACH,CAAA;cACR;SACL;KACJ,CAAC,CAAC;CACN,GAAG","file":"team/component/user/user-list.js","sourcesContent":["(function(){\n    var TeamStore, TeamActions, UserStatusStore, UserStatusActions;\n\n    MiitComponents.UserList = React.createClass({\n        getDefaultProps: function() {\n            return {\n                users:    [],\n                loading:  'Chargement...',\n                headers:  true,\n                invite:   true,\n                roles:    true,\n                emails:   true,\n                filtered: true,\n                status:   false\n            };\n        },\n\n        getInitialState: function() {\n            return {\n                users:  [],\n                loaded: false\n            };\n        },\n\n        componentWillMount: function() {\n            if(!TeamStore) {\n                TeamStore = MiitApp.get('miit-team-store');\n            }\n            if(!TeamActions) {\n                TeamActions = MiitApp.get('miit-team-actions');\n            }\n            if(!UserStatusStore) {\n                UserStatusStore = MiitApp.get('miit-user-status-store');\n            }\n            if(!UserStatusActions) {\n                UserStatusActions = MiitApp.get('miit-user-status-actions');\n            }\n            this.setState({\n                users: TeamStore.getUsers(this.props.filtered)\n            });\n        },\n\n        componentDidMount: function() {\n            // Invited\n            TeamStore.addInvitedListener(this._refresh);\n            // Promoted\n            TeamStore.addPromotedListener(this._refresh);\n            // Demoted\n            TeamStore.addDemotedListener(this._refresh);\n            // Removed\n            TeamStore.addRemovedListener(this._refresh);\n            // Refresh\n            TeamStore.addRefreshedListener(this._refresh);\n            // Refresh the list\n            TeamActions.refresh();\n        },\n\n        componentWillUnmount: function() {\n            // Invited\n            TeamStore.removeInvitedListener(this._refresh);\n            // Promoted\n            TeamStore.removePromotedListener(this._refresh);\n            // Demoted\n            TeamStore.removeDemotedListener(this._refresh);\n            // Removed\n            TeamStore.removeRemovedListener(this._refresh);\n            // Refresh\n            TeamStore.removeRefreshedListener(this._refresh);\n        },\n\n        _refresh: function() {\n            if(this.isMounted()) {\n                this.setState({\n                    users:  TeamStore.getUsers(this.props.filtered).sortBy('name'),\n                    loaded: true\n                });\n            }\n        },\n\n        render: function() {\n            return (\n                <div className=\"miit-component user-list\">\n                    <If test={this.props.headers}>\n                        <MiitComponents.UserListHeader email={this.props.emails} roles={this.props.roles} />\n                    </If>\n                    {this.state.users.map(function(user) {\n                        return <MiitComponents.UserListItem key={user.id} user={user} email={this.props.emails} roles={this.props.roles} status={this.props.status} />;\n                    }.bind(this))}\n                    <If test={!this.state.loaded}>\n                        <MiitComponents.Loading />\n                    </If>\n                    <If test={this.props.invite}>\n                        <MiitComponents.UserListInvite onInvite={this.allowRefresh} />\n                    </If>\n                </div>\n            );\n        }\n    });\n})();"],"sourceRoot":"/source/"}